Please give a short description of the following characteristics for your solution:

1-  Will it work with a 2 TB input file as well?
    
    This Will not work for a 2TB Input File
    as I am reading the entire JSON File as one Object so it will fail due to Memory Error

    There are a number of Python Packages like (bigjson , JSONStreamer) for Reading JSON as stream.
    We could use one of them
 
2-  What would happen if the input file has one malformed JSON line towards the
end of the file?

   We would will be to read the file but we wont be able to deserialize to a Native Python DataType
   the better solution would be to fix the broken JSON at the source
   But if that is not an option we could use regex.


3 - Assume your API should degrade gracefully / still be available in case the
upstream exchange rate service is down. How would you handle this?

    We could cache our Upstream API's Responses.
    This Cache can be refreshed every time we get a Valid Response.
    
    This Cache can be used to Calculate the Currency Value for the Input
    And this can be used to Calculate the Output Currency Value.

    We could use an exponential backoff algorithm to check when our Upstream Service 
    becomes responsive and refresh our Cache
    